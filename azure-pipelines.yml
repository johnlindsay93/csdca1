# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '980228e6-0a08-4cdc-8bd7-f45815333a4c'
  
  # Web app name
  webAppName: 'johnswebapp-test'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'johnswebapp-test'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  
  # Python version: 3.7
  pythonVersion: '3.7'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'Sonarcloud'
        organization: 'garysca1'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'GarysCA1_GarysCA1'
        cliProjectName: 'GarysCA1'
        cliSources: '.'
      displayName: Prepare Analysis Config

    - script: |
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install setup
        pip install -r requirements.txt
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt install ./google-chrome-stable_current_amd64.deb
        curl '<sonarqube or sonarcloud url>/static/cpp/build-wrapper-linux-x86.zip' --output build-wrapper.zip
        unzip build-wrapper.zip
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - script: |
        python -m pip install --upgrade pip
        pip install pytest
        python -m pytest tests/
      displayName: 'Running Unit Tests'
    - script: |
        python -m venv antenv
        source antenv/bin/activate
        pip install behave
        pip install selenium
        behave
      displayName: 'Running BDD Tests'

    - script: |
        build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir $(Build.ArtifactStagingDirectory) make clean all
    - task: SonarCloudAnalyze@1
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : johnswebapp-test'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
